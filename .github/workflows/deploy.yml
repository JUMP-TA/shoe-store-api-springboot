name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Amazon Corretto 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Build with Maven
      run: mvn clean install

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-file
        path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: jar-file
        path: target/ # Specify the path to download the artifact

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Copy JAR file to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ls -al target/ # List the contents of the target directory for debugging
        scp -o StrictHostKeyChecking=no -i private_key target/*.jar ec2-user@${HOST}:~/app.jar

    - name: Stop existing Java process
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key ec2-user@${HOST} '
        echo "Stopping existing Java process..."
        sudo systemctl stop myapp.service
        '

    - name: Deploy to AWS EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key ec2-user@${HOST} '
        sudo yum update -y
        sudo yum install -y java-11-amazon-corretto
        sudo systemctl start myapp.service
        sleep 10 # Wait for the application to start
        sudo systemctl status myapp.service
        echo "Deployment completed successfully"
        '

    - name: Check application status
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key ec2-user@${HOST} '
        sudo systemctl status myapp.service
        '